#install.packages("mlbench")
library(mlbench)
data(BreastCancer)
str(BreastCancer)
install.packages("mlbench")
library(mlbench)
data(BreastCancer)
str(BreastCancer)
install.packages("mlbench")
library(mlbench)
data(BreastCancer)
str(BreastCancer)
install.packages("mlbench")
library(mlbench)
data(BreastCancer)
head(BreastCancer)
install.packages("mlbench")
if (!require('mlbench')){
install.packages("mlbench")
}
library(mlbench)
data(BreastCancer)
head(BreastCancer)
if (!require('mlbench')){
install.packages("mlbench")
}
library(mlbench)
data(BreastCancer)
head(BreastCancer)
BreastCancerC<-BreastCancer[complete.cases(BreastCancer),!names(BreastCancer)%in%c("Id")]c(nrow(BreastCancer),nrow(BreastCancerC))
if (!require('mlbench')){
install.packages("mlbench")
}
library(mlbench)
data(BreastCancer)
head(BreastCancer)
BreastCancerC<-BreastCancer[complete.cases(BreastCancer),!names(BreastCancer)%in%c("Id")]
c(nrow(BreastCancer),nrow(BreastCancerC))
BreastCancerC$Test<-F
BreastCancerC[sample(1:nrow(BreastCancerC),nrow(BreastCancerC)/3),]$Test<-T
c(sum(BreastCancerC$Test==F),sum(BreastCancerC$Test==T))
fit<-glm(Class~., BreastCancerC[BreastCancerC$Test==F,],family="binomial")
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
fit<-glm(diabetes~.,BreastCancerC[BreastCancerC$Test==F,],family="binomial")
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
fit<-glm(diabetes~.,BreastCancerC[BreastCancerC$Test==F,],family="binomial")
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
if (!require('rpart')){
install.packages("rpart")
}
library(rpart)
fit<-rpart(Class~., BreastCancerC[BreastCancerC$Test==F,],family="binomial")
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
if (!require('rpart')){
install.packages("rpart")
}
install.packages("rpart")
library(rpart)
fit<-rpart(Class~., BreastCancerC[BreastCancerC$Test==F,],family="binomial")
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
install.packages("rpart")
if (!require('rpart')){
install.packages("rpart")
}
library(rpart)
fit<-rpart(Class~., BreastCancerC[BreastCancerC$Test==F,],family="binomial")
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
if (!require('rpart')){
install.packages("rpart")
}
library(rpart)
fit<-rpart(diabetes~., BreastCancerC[BreastCancerC$Test==F,],family="binomial")
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
if (!require('rpart')){
install.packages("rpart")
}
library(rpart)
fit<-rpart(Class~., BreastCancerC[BreastCancerC$Test==F,],family="binomial")
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
View(BreastCancerC)
if (!require('rpart')){
install.packages("rpart")
}
library(rpart)
fit<-rpart(Class~., data=BreastCancerC[BreastCancerC$Test==F,])
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
if(!require('caret')){
install.packages("caret");
library(caret)
}
BCPred<-predict(fit,newdata = BreastCancerC[BreastCancerC$Test==T,])
BCAns<-ifelse(BCPred<0.5,"M","R")
BCAns<-factor(BCAns,Class = c("M","R"))
sensitivity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
specificity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
posPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
negPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
if(!require('caret')){
install.packages("caret");
}
library(caret)
BCPred<-predict(fit,newdata = BreastCancerC[BreastCancerC$Test==T,])
BCAns<-ifelse(BCPred<0.5,"M","R")
BCAns<-factor(BCAns,Class = c("M","R"))
sensitivity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
specificity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
posPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
negPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
if(!require('caret')){
install.packages("caret");
}
library(caret)
BCPred<-predict(fit,newdata = BreastCancerC[BreastCancerC$Test==T,])
BCAns<-ifelse(BCPred<0.5,"M","R")
BCAns<-factor(BCAns,Class = c("M","R"))
sensitivity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
specificity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
posPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
negPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
library(caret)
BCPred<-predict(fit,newdata = BreastCancerC[BreastCancerC$Test==T,])
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
# Chunk 1
if (!require('mlbench')){
install.packages("mlbench")
}
library(mlbench)
data(BreastCancer)
head(BreastCancer)
BreastCancerC<-BreastCancer[complete.cases(BreastCancer),!names(BreastCancer)%in%c("Id")]
c(nrow(BreastCancer),nrow(BreastCancerC))
# Chunk 2
BreastCancerC$Test<-F
BreastCancerC[sample(1:nrow(BreastCancerC),nrow(BreastCancerC)/3),]$Test<-T
c(sum(BreastCancerC$Test==F),sum(BreastCancerC$Test==T))
# Chunk 3
if (!require('rpart')){
install.packages("rpart")
library(rpart)
}
if(!require('rpart.plot')){
install.packages("rpart.plot");
library(rpart.plot)
}
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
fit
prp(fit)
# Chunk 4
if(!require('caret')){
install.packages("caret");
library(caret)
}
BCPred<-predict(fit,newdata = BreastCancerC[BreastCancerC$Test==T,])
BCAns<-ifelse(BCPred<0.5,"M","R")
BCAns<-factor(BCAns,Class = c("M","R"))
sensitivity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
specificity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
posPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
negPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
if(!require('caret')){
install.packages("caret");
library(caret)
}
BCPred<-predict(fit,newdata = BreastCancerC[BreastCancerC$Test==T,])
BCAns<-ifelse(BCPred<0.5,"M","R")
BCAns<-factor(BCAns,Class = c("M","R"))
sensitivity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
specificity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
posPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
negPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
View(BCAns)
# Chunk 1
library(mlbench)
data(Sonar)
str(Sonar)
# Chunk 2
Sonar$Test<-F
Sonar[sample(1:nrow(Sonar),nrow(Sonar)/3),]$Test<-T
c(sum(Sonar$Test==F),sum(Sonar$Test==T))
# Chunk 3
fit<-glm(Class~., Sonar[Sonar$Test==F,],family="binomial")
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
# Chunk 4
MinePred<-predict(finalFit,newdata = Sonar[Sonar$Test==T,])
MineAns<-ifelse(MinePred<0.5,"M","R") #<0.5: Level 1
MineAns<-factor(MineAns,levels = c("M","R"))
library(caret)
sensitivity(MineAns,Sonar[Sonar$Test==T,]$Class)
specificity(MineAns,Sonar[Sonar$Test==T,]$Class)
posPredValue(MineAns,Sonar[Sonar$Test==T,]$Class)
negPredValue(MineAns,Sonar[Sonar$Test==T,]$Class)
View(Sonar)
MineAns<-factor(MineAns,levels = c("M","R"))
MinePred<-predict(finalFit,newdata = Sonar[Sonar$Test==T,])
MineAns<-ifelse(MinePred<0.5,"M","R") #<0.5: Level 1
MineAns<-factor(MineAns,levels = c("M","R"))
library(caret)
sensitivity(MineAns,Sonar[Sonar$Test==T,]$Class)
specificity(MineAns,Sonar[Sonar$Test==T,]$Class)
posPredValue(MineAns,Sonar[Sonar$Test==T,]$Class)
negPredValue(MineAns,Sonar[Sonar$Test==T,]$Class)
# Chunk 1
if (!require('mlbench')){
install.packages("mlbench")
}
library(mlbench)
data(BreastCancer)
head(BreastCancer)
BreastCancerC<-BreastCancer[complete.cases(BreastCancer),!names(BreastCancer)%in%c("Id")]
c(nrow(BreastCancer),nrow(BreastCancerC))
# Chunk 2
BreastCancerC$Test<-F
BreastCancerC[sample(1:nrow(BreastCancerC),nrow(BreastCancerC)/3),]$Test<-T
c(sum(BreastCancerC$Test==F),sum(BreastCancerC$Test==T))
# Chunk 3
if (!require('rpart')){
install.packages("rpart")
library(rpart)
}
if(!require('rpart.plot')){
install.packages("rpart.plot");
library(rpart.plot)
}
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
fit
prp(fit)
# Chunk 4
if(!require('caret')){
install.packages("caret");
library(caret)
}
BCPred<-predict(fit,newdata = BreastCancerC[BreastCancerC$Test==T,])
BCAns<-ifelse(BCPred<0.5,"B","R")
BCAns<-factor(BCAns,Class = c("M","R"))
sensitivity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
specificity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
posPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
negPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
if (!require('rpart')){
install.packages("rpart")
library(rpart)
}
if(!require('rpart.plot')){
install.packages("rpart.plot");
library(rpart.plot)
}
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
prp(finalFit)
if (!require('rpart')){
install.packages("rpart")
library(rpart)
}
if(!require('rpart.plot')){
install.packages("rpart.plot");
library(rpart.plot)
}
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
prp(finalFit)
View(BreastCancerC)
View(BreastCancerC)
BCPred<-predict(fit,newdata=BreastCancerC[BreastCancerC$Test==T,])
head(posPred)
BCPred<-predict(fit,newdata=BreastCancerC[BreastCancerC$Test==T,])
head(BCPred)
result<-cbind(round(BCPred,digits=2),
BreastCancerC[BreastCancerC$Test==T,]$Class,
as.character(BreastCancerC[BreastCancerC$Test==T,]$Test))
head(result)
BCPredC<-predict(fit,newdata=BreastCancerC[BreastCancerC$Test==T,],type="class")
head(BCPredC)
resultC<-cbind(as.character(BCPredC),BreastCancerC[BreastCancerC$Test==T,]$Class,
as.character(BreastCancerC[BreastCancerC$Test==T,]$Test))
head(resultC)
result<-cbind(round(BCPred,digits=2),
BreastCancerC[BreastCancerC$Test==T,]$Test,
)
head(result)
result<-cbind(round(BCPred,digits=2),
BreastCancerC[BreastCancerC$Test==T,]$Test
)
head(result)
result<-cbind(round(BCPred,digits=2),
BreastCancerC[BreastCancerC$Test==T,]$Class,
as.character(BreastCancerC[BreastCancerC$Test==T,]$Test))
head(result)
result<-cbind(round(BCPred,digits=2),
BreastCancerC[BreastCancerC$Test==T,]$Test,
as.character(BreastCancerC[BreastCancerC$Test==T,]$Test))
head(result)
result<-cbind(round(BCPred,digits=2),
BreastCancerC[BreastCancerC$Test==T,]$Test)
head(result)
View(result)
View(BCAns)
View(BCPred)
View(BCAns)
# Chunk 1
if (!require('mlbench')){
install.packages("mlbench")
}
library(mlbench)
data(BreastCancer)
head(BreastCancer)
BreastCancerC<-BreastCancer[complete.cases(BreastCancer),!names(BreastCancer)%in%c("Id")]
c(nrow(BreastCancer),nrow(BreastCancerC))
# Chunk 2
BreastCancerC$Test<-F
BreastCancerC[sample(1:nrow(BreastCancerC),nrow(BreastCancerC)/3),]$Test<-T
c(sum(BreastCancerC$Test==F),sum(BreastCancerC$Test==T))
# Chunk 3
if (!require('rpart')){
install.packages("rpart")
library(rpart)
}
if(!require('rpart.plot')){
install.packages("rpart.plot");
library(rpart.plot)
}
fit<-rpart(Class~.,data=BreastCancerC[BreastCancerC$Test==F,])
fit
prp(fit)
# Chunk 4
BCPred<-predict(fit,newdata=BreastCancerC[BreastCancerC$Test==T,])
head(BCPred)
# Chunk 5
result<-cbind(round(BCPred,digits=2),
BreastCancerC[BreastCancerC$Test==T,]$Class,
as.character(BreastCancerC[BreastCancerC$Test==T,]$Test))
head(result)
# Chunk 6
BCPredC<-predict(fit,newdata=BreastCancerC[BreastCancerC$Test==T,],type="class")
head(BCPredC)
# Chunk 7
resultC<-cbind(as.character(BCPredC),BreastCancerC[BreastCancerC$Test==T,]$Class,
as.character(BreastCancerC[BreastCancerC$Test==T,]$Test))
head(resultC)
BCPred<-predict(fit,newdata=BreastCancerC[BreastCancerC$Test==T,])
head(BCPred)
result<-cbind(round(BCPred,digits=2),
BreastCancerC[BreastCancerC$Test==T,]$Class,
as.character(BreastCancerC[BreastCancerC$Test==T,]$Test))
head(result)
View(BCPred)
View(result)
View(result)
# Chunk 1
if (!require('mlbench')){
install.packages("mlbench")
}
library(mlbench)
data(BreastCancer)
head(BreastCancer)
BreastCancerC<-BreastCancer[complete.cases(BreastCancer),!names(BreastCancer)%in%c("Id")]
c(nrow(BreastCancer),nrow(BreastCancerC))
# Chunk 2
BreastCancerC$Test<-F
BreastCancerC[sample(1:nrow(BreastCancerC),nrow(BreastCancerC)/3),]$Test<-T
c(sum(BreastCancerC$Test==F),sum(BreastCancerC$Test==T))
# Chunk 3
fit<-glm(Class~., BreastCancerC[BreastCancerC$Test==F,],family="binomial")
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
# Chunk 4
BCPred<-predict(fit,newdata = BreastCancerC[BreastCancerC$Test==T,])
BCAns<-ifelse(BCPred<0.5,"B","R")
BCAns<-factor(BCAns,Class = c("M","R"))
sensitivity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
specificity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
posPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
negPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
fit<-glm(Class~., BreastCancerC[BreastCancerC$Test==F,],family="binomial")
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
# Chunk 1
if (!require('mlbench')){
install.packages("mlbench")
}
library(mlbench)
data(BreastCancer)
head(BreastCancer)
BreastCancerC<-BreastCancer[complete.cases(BreastCancer),!names(BreastCancer)%in%c("Id")]
c(nrow(BreastCancer),nrow(BreastCancerC))
# Chunk 2
BreastCancerC$Test<-F
BreastCancerC[sample(1:nrow(BreastCancerC),nrow(BreastCancerC)/3),]$Test<-T
c(sum(BreastCancerC$Test==F),sum(BreastCancerC$Test==T))
# Chunk 3
fit<-glm(Class~., BreastCancerC[BreastCancerC$Test==F,],family="binomial")
library(MASS)
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
# Chunk 4
BCPred<-predict(fit,newdata = BreastCancerC[BreastCancerC$Test==T,])
BCAns<-ifelse(BCPred<0.5,"B","M")
BCAns<-factor(BCAns,Class = c("B","M"))
sensitivity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
specificity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
posPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
negPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
# Chunk 1
if (!require('mlbench')){
install.packages("mlbench")
}
library(mlbench)
data(BreastCancer)
head(BreastCancer)
BreastCancerC<-BreastCancer[complete.cases(BreastCancer),!names(BreastCancer)%in%c("Id")]
c(nrow(BreastCancer),nrow(BreastCancerC))
# Chunk 2
BreastCancerC$Test<-F
BreastCancerC[sample(1:nrow(BreastCancerC),nrow(BreastCancerC)/3),]$Test<-T
c(sum(BreastCancerC$Test==F),sum(BreastCancerC$Test==T))
# Chunk 3
fit<-glm(Class~., BreastCancerC[BreastCancerC$Test==F,],family="binomial")
finalFit<-stepAIC(fit,direction = "both",trace = F)
summary(finalFit)$coefficients
# Chunk 4
BCPred<-predict(fit,newdata = BreastCancerC[BreastCancerC$Test==T,])
BCAns<-ifelse(BCPred<0.5,"B","M")
BCAns<-factor(BCAns,Class = c("B","M"))
sensitivity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
specificity(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
posPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
negPredValue(BCAns,BreastCancerC[BreastCancerC$Test==T,]$Class)
